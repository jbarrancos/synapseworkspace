            # WA - TASK NOT WORKING WIT DEPENDENCIES AND KEEPS DEFAULTWORKSPACE/SQL
    - powershell: |
        # This script can be used to preproces the templateworkspace.json in the publish branch to fix issues related to deployment task in devops
        # Renames DefaultWorkspace & SQL and dependsOn in pipelines over other pipelines not working
        $templateFile="$(build.artifactstagingdirectory)\synws_publish\TemplateForWorkspace.json"

        # Formats JSON in a nicer format than the built-in ConvertTo-Json does.
        function Format-Json([Parameter(Mandatory, ValueFromPipeline)][String] $json) {
            $indent = 0;
            ($json -Split "`n" | % {
                if ($_ -match '[\}\]]\s*,?\s*$') {
                    # This line ends with ] or }, decrement the indentation level
                    $indent--
                }
                $line = ('  ' * $indent) + $($_.TrimStart() -replace '":  (["{[])', '": $1' -replace ':  ', ': ')
                if ($_ -match '[\{\[]\s*$') {
                    # This line ends with [ or {, increment the indentation level
                    $indent++
                }
                $line
            }) -Join "`n"
        }
        
        
        $fileContent = Get-Content  $templateFile

        #Replace Default WorkspaceSql and Storage  may not be modified
        $obj=$jsonArray.resources | Where-Object {$_.name -like "*-WorkspaceDefaultSqlServer')]" }
        $jsonArray.resources.Remove($obj)
        $obj=$jsonArray.resources | Where-Object { $_.name -like "*-WorkspaceDefaultStorage')]"  }
        $jsonArray.resources.Remove($obj)


        # Convert json to object and covert array of resources with Arraylist
        $jsonArray=$fileContent | ConvertFrom-Json
        $jsonArray.resources=[System.Collections.ArrayList]($jsonArray.resources)


        $typeList=@("pipelines","datasets","linkedServices") 
        foreach ($type in $typeList) {
        "ordering $type"
        $changed=$true
        while ($changed) {
        # Reorder dependencies on pipelines
        $pipelineResources=[System.Collections.ArrayList]($jsonArray.resources | Where-Object { $_.type -like "*/$type"})
        $changed=$false
        foreach ($pipelineResource in $pipelineResources)  { 
          $dPosition=0
          foreach ($pipelineDependency in ($pipelineResource.dependsOn | Where-Object { $_ -like "*, '/$type/*" })) {
            $matched=$pipelineDependency -match ".*/$type(/.*)'"
            $pipelineDependency=$pipelineResources | Where-Object { $_.Name -like "*, '$($Matches[1])')]" }
            $tempPosition=$pipelineResources.IndexOf($pipelineDependency)
            if ($tempPosition -gt $dPosition) {
              $dPosition=$tempPosition
            }			
          }
          $pPosition=$pipelineResources.IndexOf($pipelineResource)

            if ($pPosition -lt $dPosition) {
            "Need to move $pPosition after $dPosition"
            $jsonArray.resources.Remove($pipelineResource)
            $jsonArray.resources.Insert($dPosition,$pipelineResource)
            $changed=$true
          }
        }}}


        $workspaceTemplateJson=$jsonArray | ConvertTo-Json -Depth 99| Format-Json

        # Json parser powershell is not perfect, so remove some of the json escapes
        $workspaceTemplateJson=$workspaceTemplateJson -replace "\\u003c" , "<" -replace "\\u003e", ">" -replace "\\u0027",  "'"
        $workspaceTemplateJson | Out-File -Encoding ascii "$templateFile"
        "Debug"
        $workspaceTemplateJson

      displayName: "Fix workspacetemplate"
